import pandas as pd 




class xlsx2vh:
    def __init__(self):
        self.Titles = ["ADDRESS", "DECIMAL DATA"]
        self.memInitialization = []
    def readXlsx(self, xlsxFile):
        """
        Reads an Excel file and returns a DataFrame.
        """
        df = pd.read_excel(xlsxFile, usecols=["ADDRESS", "DECIMAL DATA"])
        for i in range(df.shape[0]):
            address = df[self.Titles[0]][i]
            data = df[self.Titles[1]][i]
            if pd.isna(address) or pd.isna(data):
                print(f"Skipping row {i+1} due to missing data.")
                exit(1)
            self.memInitialization.append((str(address), str(data)))
        df = pd.DataFrame(self.memInitialization, columns=self.Titles)
        return df
    def writeVh(self, df, vhFile):
        """
        Writes the DataFrame to a Verilog header file.
        """
        with open(vhFile, 'w') as f:
            f.write("// Generated Verilog Header File\n")
            f.write("// This file is automatically generated from an Excel file.\n\n")
            for i in range(df.shape[0]):
                address = df[self.Titles[0]][i]
                data = df[self.Titles[1]][i]
                if pd.isna(address) or pd.isna(data):
                    print(f"Skipping row {i+1} due to missing data.")
                    exit(1)
                f.write(f"RandomAccessMemory[{address}] <= 16'd{data};\n")
        
        
if __name__ == "__main__":
    xlsxFile        = "memoryHeader.xlsx"  # Replace with your Excel file path
    vhFile          = "regMemInit.vh"  # Replace with your desired Verilog header file path
    converter       = xlsx2vh()
    df = converter.readXlsx(xlsxFile)
    converter.writeVh(df, vhFile)
    print(f"Verilog header file '{vhFile}' has been created.")



